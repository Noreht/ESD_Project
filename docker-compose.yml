
networks:
  esd-net:
    driver: bridge

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672" #gui
    environment:
      RABBITMQ_DEFAULT_USER: myuser
      RABBITMQ_DEFAULT_PASS: mypassword
    networks:
      - esd-net
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s

  gateway:
    build: ./backend/gateway
    container_name: gateway
    command: node gateway.js
    ports:
      - "3000:3000"
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: myuser
      RABBITMQ_PASS: mypassword
    networks:
      - esd-net

  cata:
    build: ./backend/cata
    container_name: cata
    command: python cata.py
    ports:
      - "5001:5001"
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: myuser
      RABBITMQ_PASS: mypassword

    env_file:
      - ./backend/.env
      
    networks:
      - esd-net
  catb:
    build: ./backend/catb
    container_name: catb
    command: python catb.py
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: myuser
      RABBITMQ_PASS: mypassword

    env_file:
      - ./backend/.env
    networks:
      - esd-net

  findtop5:
    build: ./backend/findtop5
    container_name: findtop5
    command: python findtop5.py
    ports:
      - "5300:5300"
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: myuser
      RABBITMQ_PASS: mypassword
    networks:
      - esd-net

  notification:
    build: ./backend/notification
    container_name: notification
    command: python notification.py
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: myuser
      RABBITMQ_PASS: mypassword
    env_file:
      - ./backend/.env

    networks:
      - esd-net

  sharedalbum:
    build: ./backend/sharedalbum
    container_name: sharedalbum
    command: python sharedalbum.py
    ports:
      - "5100:5100"
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: myuser
      RABBITMQ_PASS: mypassword

    env_file:
      - ./backend/.env
    networks:
      - esd-net

  vidprocrabbmq:
    build: ./backend/vidprocrabbmq
    container_name: vidprocrabbmq
    command: python vidprocrabbmq.py
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: myuser
      RABBITMQ_PASS: mypassword
    env_file:
      - ./backend/.env
    networks:
      - esd-net
    volumes:
      - ./Frontend/src/assets/videos:/app/videos


  frontend:
    build: ./frontend
    container_name: vue_frontend
    ports:
      - "8080:80"
    depends_on:
      gateway:
        condition: service_started
    networks:
      - esd-net
    volumes:
      - ./Frontend/src/assets/videos:/app/videos